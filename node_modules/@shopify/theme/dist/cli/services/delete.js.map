{"version":3,"file":"delete.js","sourceRoot":"","sources":["../../../src/cli/services/delete.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,iBAAiB,EAAE,UAAU,EAAC,MAAM,gCAAgC,CAAA;AAE5E,OAAO,EAAC,cAAc,EAAE,eAAe,EAAC,MAAM,0BAA0B,CAAA;AACxE,OAAO,EAAC,WAAW,EAAC,MAAM,4BAA4B,CAAA;AAEtD,OAAO,EAAC,wBAAwB,EAAE,aAAa,EAAE,aAAa,EAAC,MAAM,0BAA0B,CAAA;AAC/F,OAAO,EAAC,SAAS,EAAC,MAAM,gCAAgC,CAAA;AASxD,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,YAA0B,EAAE,OAAsB;IACnF,MAAM,KAAK,GAAG,YAAY,CAAC,SAAS,CAAA;IACpC,MAAM,MAAM,GAAG,MAAM,yBAAyB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;IAErE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;QACzD,OAAM;KACP;IAED,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,CAAA;IAE1D,aAAa,CAAC;QACZ,QAAQ,EAAE,SAAS,CACjB,MAAM,EACN,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,0CAA0C,KAAK,GAAG,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC,EACzF,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC,EAAE,oBAAoB,KAAK,GAAG,CAAC,CACjF;KACF,CAAC,CAAA;AACJ,CAAC;AAED,KAAK,UAAU,yBAAyB,CAAC,YAA0B,EAAE,OAAsB;IACzF,MAAM,sBAAsB,GAAG,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAA;IAEvG,IAAI,CAAC,sBAAsB,EAAE;QAC3B,OAAO,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;KACzC;IAED,MAAM,KAAK,GAAG,YAAY,CAAC,SAAS,CAAA;IACpC,MAAM,KAAK,GAAG,MAAM,iBAAiB,CAAC,YAAY,EAAE;QAClD,MAAM,EAAE,yCAAyC,KAAK,GAAG;QACzD,MAAM,EAAE;YACN,GAAG,OAAO;SACX;KACF,CAAC,CAAA;IAEF,OAAO,CAAC,KAAK,CAAC,CAAA;AAChB,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,MAAe,EAAE,KAAa;IACvD,MAAM,OAAO,GAAG,SAAS,CACvB,MAAM,EACN,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,oCAAoC,KAAK,GAAG,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC,EACnF,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC,EAAE,QAAQ,KAAK,GAAG,CAAC,CAClE,CAAA;IAED,OAAO,wBAAwB,CAAC,EAAC,OAAO,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,QAAQ,EAAC,CAAC,CAAA;AACxH,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,IAAc;IACxD,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAE1B,aAAa,CAAC;QACZ,QAAQ,EAAE,CAAC,8CAA8C,EAAE,EAAC,OAAO,EAAE,SAAS,EAAC,EAAE,eAAe,CAAC;QACjG,IAAI,EAAE,CAAC,EAAC,OAAO,EAAE,kCAAkC,GAAG,EAAE,EAAC,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC;KACxE,CAAC,CAAA;AACJ,CAAC","sourcesContent":["import {findOrSelectTheme, findThemes} from '../utilities/theme-selector.js'\nimport {Theme} from '../models/theme.js'\nimport {themeComponent, themesComponent} from '../utilities/theme-ui.js'\nimport {deleteTheme} from '../utilities/themes-api.js'\nimport {AdminSession} from '@shopify/cli-kit/node/session'\nimport {renderConfirmationPrompt, renderSuccess, renderWarning} from '@shopify/cli-kit/node/ui'\nimport {pluralize} from '@shopify/cli-kit/common/string'\n\nexport interface DeleteOptions {\n  selectTheme: boolean\n  development: boolean\n  force: boolean\n  themes: string[]\n}\n\nexport async function deleteThemes(adminSession: AdminSession, options: DeleteOptions) {\n  const store = adminSession.storeFqdn\n  const themes = await findThemesByDeleteOptions(adminSession, options)\n\n  if (!options.force && !(await isConfirmed(themes, store))) {\n    return\n  }\n\n  themes.map((theme) => deleteTheme(theme.id, adminSession))\n\n  renderSuccess({\n    headline: pluralize(\n      themes,\n      (themes) => [`The following themes were deleted from ${store}:`, themesComponent(themes)],\n      (theme) => ['The theme', ...themeComponent(theme), `was deleted from ${store}.`],\n    ),\n  })\n}\n\nasync function findThemesByDeleteOptions(adminSession: AdminSession, options: DeleteOptions) {\n  const isSingleThemeSelection = options.selectTheme || options.development || options.themes.length <= 1\n\n  if (!isSingleThemeSelection) {\n    return findThemes(adminSession, options)\n  }\n\n  const store = adminSession.storeFqdn\n  const theme = await findOrSelectTheme(adminSession, {\n    header: `What theme do you want to delete from ${store}?`,\n    filter: {\n      ...options,\n    },\n  })\n\n  return [theme]\n}\n\nasync function isConfirmed(themes: Theme[], store: string) {\n  const message = pluralize(\n    themes,\n    (themes) => [`Delete the following themes from ${store}?`, themesComponent(themes)],\n    (theme) => ['Delete', ...themeComponent(theme), `from ${store}?`],\n  )\n\n  return renderConfirmationPrompt({message, confirmationMessage: 'Yes, confirm changes', cancellationMessage: 'Cancel'})\n}\n\nexport function renderDeprecatedArgsWarning(argv: string[]) {\n  const ids = argv.join(' ')\n\n  renderWarning({\n    headline: ['Positional arguments are deprecated. Use the', {command: '--theme'}, 'flag instead:'],\n    body: [{command: `$ shopify theme delete --theme ${ids}`}, {char: '.'}],\n  })\n}\n"]}