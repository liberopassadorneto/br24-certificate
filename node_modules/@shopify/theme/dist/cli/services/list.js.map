{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../src/cli/services/list.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,mBAAmB,CAAA;AACzC,OAAO,EAAC,aAAa,EAAE,gBAAgB,EAAO,MAAM,sCAAsC,CAAA;AAC1F,OAAO,EAAC,MAAM,EAAe,YAAY,EAAC,MAAM,uCAAuC,CAAA;AACvF,OAAO,EAAC,WAAW,EAAC,MAAM,0BAA0B,CAAA;AASpD,MAAM,CAAC,KAAK,UAAU,IAAI,CAAC,YAA0B,EAAE,OAAgB;IACrE,MAAM,KAAK,GAAG,YAAY,CAAC,SAAS,CAAA;IACpC,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC;QACxB,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,KAAkB,EAAE,IAAI,EAAE,EAAE;YACnD,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,KAAK,IAAI,CAAA;YACnC,OAAO,KAAK,CAAA;QACd,CAAC,EAAE,EAAE,CAAC;QACN,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,OAAO,CAAC,IAAI;KAC9C,CAAC,CAAA;IAEF,IAAI,WAAW,GAAG,MAAM,gBAAgB,CAAC,YAAY,CAAC,CAAA;IACtD,IAAI,MAAM,CAAC,GAAG,EAAE,EAAE;QAChB,WAAW,GAAG,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,CAAC,CAAA;KACvD;IAED,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAC,EAAE,EAAE,CAAC,CAAC;QACpD,EAAE,EAAE,IAAI,EAAE,EAAE;QACZ,IAAI;QACJ,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;KAC9B,CAAC,CAAC,CAAA;IAEH,WAAW,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC,CAAA;AACtC,CAAC","sourcesContent":["import {columns} from './list.columns.js'\nimport {ALLOWED_ROLES, fetchStoreThemes, Role} from '../utilities/theme-selector/fetch.js'\nimport {Filter, FilterProps, filterThemes} from '../utilities/theme-selector/filter.js'\nimport {renderTable} from '@shopify/cli-kit/node/ui'\nimport {AdminSession} from '@shopify/cli-kit/node/session.js'\n\nexport interface Options {\n  role?: Role\n  name?: string\n  id?: number\n}\n\nexport async function list(adminSession: AdminSession, options: Options) {\n  const store = adminSession.storeFqdn\n  const filter = new Filter({\n    ...ALLOWED_ROLES.reduce((roles: FilterProps, role) => {\n      roles[role] = options.role === role\n      return roles\n    }, {}),\n    theme: options.id?.toString() ?? options.name,\n  })\n\n  let storeThemes = await fetchStoreThemes(adminSession)\n  if (filter.any()) {\n    storeThemes = filterThemes(store, storeThemes, filter)\n  }\n\n  const themes = storeThemes.map(({id, name, role}) => ({\n    id: `#${id}`,\n    name,\n    role: role ? `[${role}]` : '',\n  }))\n\n  renderTable({rows: themes, columns})\n}\n"]}